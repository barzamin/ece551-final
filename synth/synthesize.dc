## -- load RTL
read_file -format sverilog { {{sources|join(' ')}} }
# main unit is QuadCopter
current_design QuadCopter
# make sure hierarchy is loaded
link

## -- configure clock
create_clock -name "clk" -period 3.75 { clk }
# hands off the clock net
set_dont_touch_network [find port clk]
# 0.20ns clock skew
set_clock_uncertainty 0.20 clk

# vector of all inputs excepting clock
set prim_inputs [remove_from_collection [all_inputs] [find port clk]]

## -- keep synopsys from buffering iRST; in a real design, a reset tree would be generated by place&route step
set_dont_touch_network [get_net iRST/rst_n]

## -- set up input delays and drives
# 0.25ns input delay
set_input_delay -clock clk 0.25 [copy_collection $prim_inputs]
set_driving_cell -lib_cell NAND2X2_RVT -library saed32rvt_tt0p85v25c [copy_collection [remove_from_collection $prim_inputs [find port rst_n]]]
set_drive 0.1 [find port rst_n]

## -- set up output delays and loads
# 0.5ns output delay (prior to rise)
set_output_delay -clock clk 0.5 [all_outputs]
# 0.1pF load on all outputs
set_load 0.10 [all_outputs]

## -- set up wire load model for internal parasitic estimation
set_wire_load_model -name 16000 -library saed32rvt_tt0p85v25c

## -- constrain max txn time to prevent hot electron damage
set_max_transition 0.15 [current_design]

## -- initial compile and DRC check
check_design
compile

## -- smash DW components
ungroup -all -flatten

## -- actually fix hold-time violations
set_fix_hold clk

## -- recompile flattened
check_design
check_design

## -- reports
report_timing -path full -delay max -nworst 3 > reports/max_worst.timing.txt
report_timing -path full -delay min -nworst 3 > reports/min_worst.timing.txt
report_area > reports/area.txt
report_register > reports/registers.txt
report_register -level_sensitive > reports/latches.txt
check_design > reports/drc.txt

## -- writeout netlist
write -format verilog -output QuadCopter.vg QuadCopter

## -- write design constraints
write_sdc QuadCopter.sdc

quit